{"abi":[{"type":"function","name":"mintToTreasury","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"protocolTreasury","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"retireFromTreasury","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferFromTreasury","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ProtocolTreasuryChanged","inputs":[{"name":"newTreasury","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TreasuryRetirement","inputs":[{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"reason","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"TreasuryTransfer","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"mintToTreasury(uint256)":"a65948a3","protocolTreasury()":"803db96d","retireFromTreasury(uint256,string)":"fd99b922","transferFromTreasury(address,uint256)":"48a490fb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"ProtocolTreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"TreasuryRetirement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TreasuryTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"retireFromTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ProtocolTreasuryChanged(address)\":{\"details\":\"Emitted when the protocol treasury address is changed.\"},\"TreasuryRetirement(uint256,string)\":{\"details\":\"Emitted when tokens are retired (burned) from the treasury.\"},\"TreasuryTransfer(address,uint256)\":{\"details\":\"Emitted when tokens are transferred from the treasury.\"}},\"kind\":\"dev\",\"methods\":{\"mintToTreasury(uint256)\":{\"details\":\"Mints a specified amount of tokens directly to the protocol treasury. MUST only be callable by the MINTER_ROLE.\",\"params\":{\"amount\":\"The amount of tokens to mint.\"}},\"protocolTreasury()\":{\"details\":\"Returns the address of the protocol treasury.\"},\"retireFromTreasury(uint256,string)\":{\"details\":\"Retires (burns) tokens from the treasury. Used to permanently remove carbon credits from circulation after use. MUST only be callable by the TREASURY_MANAGER_ROLE.\",\"params\":{\"amount\":\"The amount to retire.\",\"reason\":\"A string describing the reason for retirement.\"}},\"transferFromTreasury(address,uint256)\":{\"details\":\"Transfers tokens from the treasury to a specified address. MUST only be callable by the TREASURY_MANAGER_ROLE.\",\"params\":{\"amount\":\"The amount to transfer.\",\"to\":\"The recipient address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICarbonCreditToken.sol\":\"ICarbonCreditToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/interfaces/ICarbonCreditToken.sol\":{\"keccak256\":\"0x7941b294e1c82acc0b732f3f1a78e5d9f3d7e58191a6c66aa6167010efb670b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a97d85b78e3b8f712b9fd43e8c81896fe0c7e778738c98df62833000e9fa273\",\"dweb:/ipfs/QmZGQrvUVT54iMp9axogbtyBaYBXuK2e5ttd9NaposxTM6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"newTreasury","type":"address","indexed":true}],"type":"event","name":"ProtocolTreasuryChanged","anonymous":false},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"string","name":"reason","type":"string","indexed":false}],"type":"event","name":"TreasuryRetirement","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"TreasuryTransfer","anonymous":false},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mintToTreasury"},{"inputs":[],"stateMutability":"view","type":"function","name":"protocolTreasury","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"retireFromTreasury"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFromTreasury"}],"devdoc":{"kind":"dev","methods":{"mintToTreasury(uint256)":{"details":"Mints a specified amount of tokens directly to the protocol treasury. MUST only be callable by the MINTER_ROLE.","params":{"amount":"The amount of tokens to mint."}},"protocolTreasury()":{"details":"Returns the address of the protocol treasury."},"retireFromTreasury(uint256,string)":{"details":"Retires (burns) tokens from the treasury. Used to permanently remove carbon credits from circulation after use. MUST only be callable by the TREASURY_MANAGER_ROLE.","params":{"amount":"The amount to retire.","reason":"A string describing the reason for retirement."}},"transferFromTreasury(address,uint256)":{"details":"Transfers tokens from the treasury to a specified address. MUST only be callable by the TREASURY_MANAGER_ROLE.","params":{"amount":"The amount to transfer.","to":"The recipient address."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ICarbonCreditToken.sol":"ICarbonCreditToken"},"evmVersion":"cancun","libraries":{}},"sources":{"src/interfaces/ICarbonCreditToken.sol":{"keccak256":"0x7941b294e1c82acc0b732f3f1a78e5d9f3d7e58191a6c66aa6167010efb670b2","urls":["bzz-raw://2a97d85b78e3b8f712b9fd43e8c81896fe0c7e778738c98df62833000e9fa273","dweb:/ipfs/QmZGQrvUVT54iMp9axogbtyBaYBXuK2e5ttd9NaposxTM6"],"license":"MIT"}},"version":1},"id":49}