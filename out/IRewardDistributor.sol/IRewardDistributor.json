{"abi":[{"type":"function","name":"claimableRewards","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"depositRewards","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rewardToken","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"updateNodeContribution","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"contributionDelta","type":"uint256","internalType":"uint256"},{"name":"timestamp","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"NodeContributionUpdated","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"newScore","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"RewardRateSet","inputs":[{"name":"newRate","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsClaimed","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsDeposited","inputs":[{"name":"depositor","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimableRewards(address)":"dc01f60d","depositRewards(uint256)":"8bdf67f2","rewardToken()":"f7c618c1","updateNodeContribution(address,uint256,uint64)":"4e06f353"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"NodeContributionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RewardRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDeposited\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"claimableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"contributionDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"updateNodeContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"NodeContributionUpdated(address,uint256,uint64)\":{\"details\":\"Emitted when a node's contribution score is updated.\"},\"RewardRateSet(uint256)\":{\"details\":\"Emitted when the reward rate is updated.\"},\"RewardsClaimed(address,uint256)\":{\"details\":\"Emitted when an operator claims their rewards.\"},\"RewardsDeposited(address,uint256)\":{\"details\":\"Emitted when rewards are deposited into the contract.\"}},\"kind\":\"dev\",\"methods\":{\"claimableRewards(address)\":{\"details\":\"Returns the amount of rewards claimable by a specific operator.\",\"params\":{\"operator\":\"The address of the node operator.\"},\"returns\":{\"_0\":\"The amount of reward tokens claimable.\"}},\"depositRewards(uint256)\":{\"details\":\"Deposits reward tokens into the contract to fund distribution. MUST only be callable by the REWARD_DEPOSITOR_ROLE.\",\"params\":{\"amount\":\"The amount of reward tokens to deposit.\"}},\"rewardToken()\":{\"details\":\"Returns the reward token used by the distributor.\"},\"updateNodeContribution(address,uint256,uint64)\":{\"details\":\"Updates the contribution metrics for a given node operator. MUST only be callable by the METRIC_UPDATER_ROLE.\",\"params\":{\"contributionDelta\":\"The *change* in contribution score to be added to the operator's current score.\",\"operator\":\"The address of the node operator.\",\"timestamp\":\"The timestamp associated with the contribution update.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IRewardDistributor.sol\":\"IRewardDistributor\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"src/interfaces/IRewardDistributor.sol\":{\"keccak256\":\"0x62990cbdad3740ab9730396134428c2ceea0444c28b0e6562b3c31af58584149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c0ad936768be80127e53fc9cc47206520e4c5b4b8a0a4bf030d92b1705a0b69\",\"dweb:/ipfs/QmbJs7X7nGhKBjZKPxML7gK8x5YNYyGUD6cm8JTNA6y48d\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint256","name":"newScore","type":"uint256","indexed":false},{"internalType":"uint64","name":"timestamp","type":"uint64","indexed":false}],"type":"event","name":"NodeContributionUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"newRate","type":"uint256","indexed":false}],"type":"event","name":"RewardRateSet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"RewardsClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"depositor","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"RewardsDeposited","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"claimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"depositRewards"},{"inputs":[],"stateMutability":"view","type":"function","name":"rewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"contributionDelta","type":"uint256"},{"internalType":"uint64","name":"timestamp","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"updateNodeContribution"}],"devdoc":{"kind":"dev","methods":{"claimableRewards(address)":{"details":"Returns the amount of rewards claimable by a specific operator.","params":{"operator":"The address of the node operator."},"returns":{"_0":"The amount of reward tokens claimable."}},"depositRewards(uint256)":{"details":"Deposits reward tokens into the contract to fund distribution. MUST only be callable by the REWARD_DEPOSITOR_ROLE.","params":{"amount":"The amount of reward tokens to deposit."}},"rewardToken()":{"details":"Returns the reward token used by the distributor."},"updateNodeContribution(address,uint256,uint64)":{"details":"Updates the contribution metrics for a given node operator. MUST only be callable by the METRIC_UPDATER_ROLE.","params":{"contributionDelta":"The *change* in contribution score to be added to the operator's current score.","operator":"The address of the node operator.","timestamp":"The timestamp associated with the contribution update."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IRewardDistributor.sol":"IRewardDistributor"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7","urls":["bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db","dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"],"license":"MIT"},"src/interfaces/IRewardDistributor.sol":{"keccak256":"0x62990cbdad3740ab9730396134428c2ceea0444c28b0e6562b3c31af58584149","urls":["bzz-raw://7c0ad936768be80127e53fc9cc47206520e4c5b4b8a0a4bf030d92b1705a0b69","dweb:/ipfs/QmbJs7X7nGhKBjZKPxML7gK8x5YNYyGUD6cm8JTNA6y48d"],"license":"MIT"}},"version":1},"id":50}